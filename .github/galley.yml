# This is a basic workflow to help you get started with Actions

name: galley-build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
    - 'galley*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest

    # Steps represent a sequence of tasks that will be executed as part of the job

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: set language
      run: export LANG=ja_JP.utf8
    
    - name: Install dependencies
      run: npm ci

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

      # Runs a single command using the runners shell
    - name: install Vivliostyle
      run: npm install @vivliostyle/cli --save

    - name: go gulp
      run: npx gulp build

    - name: build html
      run: node .github/workflows/build.js

    - name: publish.galley
      run: npx vivliostyle build -t 240 publish/buildHtml.html -o publish/galley.pdf

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-galley
        path: publish/galley.pdf

    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2
      with:
        name: dist-galley
        path: ./

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ゲラ ${{ github.ref }}
        draft: false
        prerelease: false

    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: galley.pdf
        asset_name: ${{ github.ref }}.pdf
        asset_content_type: application/pdf
